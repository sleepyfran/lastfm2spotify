import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';

import { environment } from '../../environments/environment'
import { LocalStorageService } from '../services/local-storage.service';

@Component({
    selector: 'app-spotify-login',
    templateUrl: './spotify-login.component.html',
    styleUrls: ['./spotify-login.component.scss']
})
export class SpotifyLoginComponent implements OnInit {

    constructor(
        private router: Router,
        private route: ActivatedRoute,
        private localStorageService: LocalStorageService,
    ) {
        // Since this component serves both as the main "login" and the callback for the
        // Spotify API, check if we got any query params and, in that case, try to get
        // the code or the error generated by the API.
        const params = this.route.snapshot.queryParamMap

        if (params.keys.length > 0) {
            const error = params.get('error')
            const errorDescription = params.get('error_description')
            const code = params.get('code')

            if (code) {
                // Save the token for later use.
                this.localStorageService.saveToken(code)
            } else {
                // Login not successful. TODO: Do something with it, or notify the user!
                console.error(errorDescription)
            }
        }
    }

    ngOnInit() {
        // Check if we already a Spotify token.
        const spotifyToken = this.localStorageService.getToken()

        if (spotifyToken) {
            // Redirect to the main component.
            this.router.navigateByUrl('/playlist-creator')
        }
    }

    /**
     * Redirects to the Spotify login page.
     */
    spotifyLogin() {
        // Scopes we're going to use in the app.
        const scopes = 'playlist-modify-private'

        // Let's build the Spotify login URL. Note: You'll need to createthe secrets.ts in the
        // assets folder and put a valid SPOTIFY_CLIENT_ID there.
        let loginUrl = 'https://accounts.spotify.com/authorize?response_type=code'
        loginUrl += `&client_id=${environment.spotifyClientId}`
        loginUrl += `&scope=${scopes}`
        loginUrl += `&redirect_uri=${document.location.origin}/spotify-login`

        window.location.href = loginUrl
    }
}
